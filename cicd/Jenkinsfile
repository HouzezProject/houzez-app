pipeline {
  agent any
  environment {
    aws_credential = 'AWS-Sylvon'
    bucket = 'houzez-app-sylvon'
    region = 'ap-southeast-2'
    repo_path = '/var/lib/jenkins/workspace/houzez-app-test1'
    exclude_file = 'node_modules/*'
    CI = 'true'
    HOME = '.'
    npm_config_cache = 'npm-cache'
  }
  
  stages {
    stage('SonarCloud') {
  environment {
    SCANNER_HOME = tool 'SonarQubeScanner'
    ORGANIZATION = 'sylvonau'
    PROJECT_NAME = 'SylvonAu_houzez-app'
  }
  steps {
    withSonarQubeEnv('SonarCloudOne') {
        sh '''$SCANNER_HOME/bin/sonar-scanner -Dsonar.organization=$ORGANIZATION \
        -Dsonar.typescript.tsconfigPath=./tsconfig.json/ \
        -Dsonar.projectKey=$PROJECT_NAME \
        -Dsonar.sources=.'''
         }
        }
      }
  
    stage('Install Packages') {
      steps {
        sh 'npm install'
      }
    }
    stage('Test and Build') {
      parallel {
        stage('Run Tests') {
          steps {   
            sh 'echo no tests now'
            sh 'npm run test'
          }
        }
        stage('Create Build Artifacts') {
          steps {
            sh 'npm run build'
          }
        }
      }
    }

stage('Production') {
  steps {
    withAWS(region:"$region",credentials:"$aws_credential") {
      sh 'aws s3 sync $repo_path s3://houzez-app-sylvon/ --exclude "$exclude_file"'
      
//     s3Delete(bucket: "${bucket}", path:'**/*')
//     s3Upload(bucket: "${bucket}", includePathPattern:'**/*');
//     s3Upload(bucket: "${bucket}", workingDir:'targetDir', includePathPattern:'**/*');
            }
          }
        }
    }
}
